name: CI

on:
  push:
  #  branches: [ master ]
  #pull_request:
  #  branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn -B install --file pom.xml
      #run: mvn -B install --file pom.xml -Dmaven.test.skip=true

    - name: Build & Push the rest container image
      env:
        registry: ${{ secrets.OPENSHIFT_REGISTRY }}
        registry_password: ${{ secrets.OPENSHIFT_API_TOKEN }}
        openshift_project: fl-project
        image_name: ${{ github.repository }}-rest
        image_tag: ${{ github.ref }}
      run: |
        find . -name DockerFile
        pwd
        ls -ltr ./rest/DockerFile
        docker build ./rest -t $registry/$openshift_project/${image_name##*/}:${image_tag##*/}
        docker login -u the_user_dont_matter -p $registry_password $registry
        docker push $registry/$openshift_project/${image_name##*/}:${image_tag##*/}

    - name: Build & Push the batch container image
      env:
        registry: ${{ secrets.OPENSHIFT_REGISTRY }}
        registry_password: ${{ secrets.OPENSHIFT_API_TOKEN }}
        openshift_project: fl-project
        image_name: ${{ github.repository }}-batch
        image_tag: ${{ github.ref }}
      run: |
        docker build ./batch -t $registry/$openshift_project/${image_name##*/}:${image_tag##*/}
        docker login -u the_user_dont_matter -p $registry_password $registry
        docker push $registry/$openshift_project/${image_name##*/}:${image_tag##*/}

    # BUG - Impossible de rediriger l'output ou de piper. 
    # https://github.com/redhat-developer/openshift-actions/issues/13
    - name: OpenShift Action
      uses: redhat-developer/openshift-actions@v1.1
      with:
        version: 'latest'
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
        parameters: '{"apitoken": "${{ secrets.OPENSHIFT_API_TOKEN }}", "acceptUntrustedCerts": "true"}'
        cmd: |
          'version'
          'registry info'
          'project'
